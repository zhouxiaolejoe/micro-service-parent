<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.micro.service.mybatisplus.mapper.User100wMapper">
  <resultMap id="BaseResultMap" type="com.micro.service.mybatisplus.model.User100w">
    <!--@mbg.generated-->
    <!--@Table user100w-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="first_name" jdbcType="VARCHAR" property="firstName" />
    <result column="last_name" jdbcType="VARCHAR" property="lastName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="copy_id" jdbcType="INTEGER" property="copyId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, first_name, last_name, sex, score, copy_id
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update user100w
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="first_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.firstName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="last_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.lastName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="sex = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.sex,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="score = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.score,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="copy_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.copyId,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user100w
    (first_name, last_name, sex, score, copy_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.firstName,jdbcType=VARCHAR}, #{item.lastName,jdbcType=VARCHAR}, #{item.sex,jdbcType=VARCHAR}, 
        #{item.score,jdbcType=INTEGER}, #{item.copyId,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.micro.service.mybatisplus.model.User100w" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user100w
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      first_name,
      last_name,
      sex,
      score,
      copy_id,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{firstName,jdbcType=VARCHAR},
      #{lastName,jdbcType=VARCHAR},
      #{sex,jdbcType=VARCHAR},
      #{score,jdbcType=INTEGER},
      #{copyId,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      first_name = #{firstName,jdbcType=VARCHAR},
      last_name = #{lastName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      copy_id = #{copyId,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.micro.service.mybatisplus.model.User100w" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into user100w
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="firstName != null">
        first_name,
      </if>
      <if test="lastName != null">
        last_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="copyId != null">
        copy_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="copyId != null">
        #{copyId,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="firstName != null">
        first_name = #{firstName,jdbcType=VARCHAR},
      </if>
      <if test="lastName != null">
        last_name = #{lastName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="copyId != null">
        copy_id = #{copyId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>